C51 COMPILER V9.54   LCD12864                                                              05/10/2023 22:22:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE ..\HARDWARE\lcd12864\lcd12864.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HARDWAR
                    -E\ad;..\HARDWARE\ds1302;..\HARDWARE\key;..\HARDWARE\lcd12864;..\HARDWARE\timer;..\SYSTEM\sys) DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\lcd12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #include"lcd12864.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : LCD12864_Delay1ms
   5          * 函数功能       : 延时1MS
   6          * 输    入         : c
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void LCD12864_Delay1ms(uint c)
  11          {
  12   1          uchar a,b;
  13   1        for(; c>0; c--)
  14   1        {
  15   2            for(b=199; b>0; b--)
  16   2          {
  17   3                for(a=1; a>0; a--);
  18   3          }
  19   2        }
  20   1      }
  21          
  22          
  23          
  24          /*******************************************************************************
  25          * 函 数 名         : LCD12864_WriteCmd
  26          * 函数功能       : 写命令
  27          * 输    入         : cmd
  28          * 输    出         : 无
  29          *******************************************************************************/
  30          
  31          void LCD12864_WriteCmd(uchar cmd)
  32          {
  33   1        uchar i;
  34   1        i = 0;
  35   1      
  36   1        LCD12864_Delay1ms(20); //等待忙完
  37   1        
  38   1        LCD12864_RS = 0;     //选择命令
  39   1        LCD12864_RW = 0;     //选择写入
  40   1        LCD12864_EN = 0;     //初始化使能端
  41   1      
  42   1        LCD12864_DATAPORT = cmd;   //放置数据
  43   1      
  44   1        LCD12864_EN = 1;       //写时序
  45   1        LCD12864_Delay1ms(5);
  46   1        LCD12864_EN = 0;              
  47   1      }
  48          
  49          /*******************************************************************************
  50          * 函 数 名         : LCD12864_WriteData
  51          * 函数功能       : 写数据
  52          * 输    入         : dat
  53          * 输    出         : 无
C51 COMPILER V9.54   LCD12864                                                              05/10/2023 22:22:28 PAGE 2   

  54          *******************************************************************************/
  55          
  56          void LCD12864_WriteData(uchar dat)
  57          {
  58   1        uchar i;
  59   1        i = 0;
  60   1      
  61   1        LCD12864_Delay1ms(20);  //等待忙完
  62   1      
  63   1        LCD12864_RS = 1;     //选择数据
  64   1        LCD12864_RW = 0;     //选择写入
  65   1        LCD12864_EN = 0;     //初始化使能端
  66   1      
  67   1        LCD12864_DATAPORT = dat;   //放置数据
  68   1      
  69   1        LCD12864_EN = 1;       //写时序
  70   1        LCD12864_Delay1ms(5);
  71   1        LCD12864_EN = 0;                    
  72   1      }
  73          
  74          /*******************************************************************************
  75          * 函 数 名         : LCD12864_ReadData
  76          * 函数功能       : 读取数据
  77          * 输    入         : 无
  78          * 输    出         : 读取到的8位数据
  79          *******************************************************************************/
  80          #ifdef LCD12864_PICTURE
              
              uchar LCD12864_ReadData(void)
              {
                uchar i, readValue;
              
                i = 0;
                
                LCD12864_Delay1ms(20);  //等待忙完
              
                LCD12864_RS = 1;       //选择命令
                LCD12864_RW = 1;
                LCD12864_EN = 0;
                LCD12864_Delay1ms(1);  //等待
              
                LCD12864_EN = 1;
                LCD12864_Delay1ms(1);
                readValue = LCD12864_DATAPORT;
                LCD12864_EN = 0;
              
                return readValue;
              }
              
              #endif
 104          
 105          /*******************************************************************************
 106          * 函 数 名         : LCD12864_Init
 107          * 函数功能       : 初始化LCD12864
 108          * 输    入         : 无
 109          * 输    出         : 无
 110          *******************************************************************************/
 111          
 112          void LCD12864_Init()
 113          {
 114   1      
 115   1        LCD12864_WriteCmd(0x30);  //选择基本指令操作
C51 COMPILER V9.54   LCD12864                                                              05/10/2023 22:22:28 PAGE 3   

 116   1        LCD12864_WriteCmd(0x0c);  //显示开，关光标
 117   1        LCD12864_WriteCmd(0x01);  //清除LCD12864的显示内容
 118   1      }
 119          
 120          /*******************************************************************************
 121          * 函 数 名         : LCD12864_ClearScreen
 122          * 函数功能       : 在画图模式下，LCD12864的01H命令不能清屏，所以要自己写一个清
 123          *                  * 屏函数
 124          * 输    入         : 无
 125          * 输    出         : 无
 126          *******************************************************************************/
 127          #ifdef LCD12864_PICTURE
              
              void LCD12864_ClearScreen(void)
              {
                uchar i,j;
              
                LCD12864_WriteCmd(0x34);    //开启拓展指令集
              
                for(i=0;i<32;i++)       //因为LCD有纵坐标32格所以写三十二次
                {
                  LCD12864_WriteCmd(0x80+i);      //先写入纵坐标Y的值
                  LCD12864_WriteCmd(0x80);      //再写入横坐标X的值
                  for(j=0;j<32;j++)     //横坐标有16位，每位写入两个字节的的数据，也
                  {             //就写入32次以为当写入两个字节之后横坐标会自
                    LCD12864_WriteData(0xFF);   //动加1，所以就不用再次写入地址了。
                  }
                }
              
                LCD12864_WriteCmd(0x36);   //0x36扩展指令里面打开绘图显示
                LCD12864_WriteCmd(0x30);   //恢复基本指令集
              }
              
              #endif
 150          /*******************************************************************************
 151          * 函 数 名         : LCD12864_SetWindow
 152          * 函数功能       : 设置在基本指令模式下设置显示坐标。注意：x是设置行，y是设置列
 153          * 输    入         : x, y
 154          * 输    出         : 无
 155          *******************************************************************************/
 156          void LCD12864_SetWindow(uchar x, uchar y)
 157          {
 158   1        uchar pos;
 159   1      
 160   1        if(x == 0)     // 第一行的地址是80H
 161   1        {
 162   2          x = 0x80;
 163   2        }
 164   1          
 165   1        else if(x == 1)  //第二行的地址是90H
 166   1        {
 167   2          x = 0x90; 
 168   2        }
 169   1        
 170   1        else if(x == 2)  //第三行的地址是88H
 171   1        {
 172   2          x = 0x88;
 173   2        }
 174   1        
 175   1        else if(x == 3)
 176   1        {
 177   2          x = 0x98;
C51 COMPILER V9.54   LCD12864                                                              05/10/2023 22:22:28 PAGE 4   

 178   2        }
 179   1        
 180   1        pos = x + y;
 181   1        LCD12864_WriteCmd(pos);
 182   1      }
 183          
 184          
 185          /*-----------------------------------------------------------------------------------------
 186          函数原型：void LCD12864_VerticalRoll(uchar N)
 187          函数功能：将DDRAM内容垂直卷动N个像素的距离
 188          入口参数：uchar N_Pixel：卷动的距离大小（单位为像素），范围为0~33（实际上可以是0~63，但33~
 189                                   63实际意义不大）
 190          出口参数：无
 191          返回参数：无
 192          注意事项：将N_Pixel设为33可将DDRAM地址0xa0~0xbf的内容完全切换到屏幕上，N为0则显示DDRAM地址
 193                    0x80~0x9f的内容（复位默认状态）
 194          -----------------------------------------------------------------------------------------*/
 195          void LCD12864_VerticalRoll(uchar N_Pixel)
 196          {
 197   1          LCD12864_WriteCmd(0x34);//允许绘图模式（开启扩展指令集模式）
 198   1          LCD12864_WriteCmd(0x03);//允许输入卷动位址
 199   1          LCD12864_WriteCmd(0x40|N_Pixel);//上卷N行（像素）
 200   1        
 201   1      
 202   1      }
 203          
 204          
 205          
 206          
 207          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    141    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
