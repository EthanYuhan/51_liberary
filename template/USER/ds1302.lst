C51 COMPILER V9.60.7.0   DS1302                                                            05/18/2023 17:05:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ..\OBJ\ds1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\ds1302\ds1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\USER;..\R
                    -EADME;..\HARDWARE\lcd12864;..\SYSTEM\delay;..\SYSTEM\sys;..\HARDWARE\key;..\HARDWARE\motor;..\HARDWARE\timer;..\HARDWARE
                    -\ad;..\HARDWARE\ds1302;..\HARDWARE\interrupt;..\HARDWARE\dht11) DEBUG OBJECTEXTEND PRINT(.\ds1302.lst) TABS(2) OBJECT(..
                    -\OBJ\ds1302.obj)

line level    source

   1          
   2          //DS1302部分  
   3          //整体 显示 时间 日期 年月 星期 
   4          //可不停更新秒时间
   5          
   6          #include "stc15f2k60s2.h" 
   7          #include "ds1302.h"
   8          #include "intrins.h"
   9          #include "sys.h"
  10          #include "lcd12864.h"
  11          
  12          
  13          //code u8 write_rtc_address[7]={0x80,0x82,0x84,0x86,0x88,0x8a,0x8c}; //秒分时日月周年 最低位读写位
  14          //code u8 read_rtc_address[7]={0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};  
  15          //u8 ds1302tmp[7]={50,59,23,20,4,7,20};//秒分时日月周年    2020年 4月 20日 8点20分 星期日  这个数是自己设定
             -的
  16          
  17          
  18          
  19          //写一个字节 
  20          //temp 要写入的字节  （地址或数据）
  21          void Write_Ds1302_Byte(u8 temp) 
  22          {
  23   1       u8 i;
  24   1       for (i=0;i<8;i++)      //循环8次 写入数据
  25   1        { 
  26   2           SCK=0;
  27   2           SDA=temp&0x01;     //每次传输低字节 
  28   2           temp>>=1;      //右移一位
  29   2           SCK=1;
  30   2         }
  31   1      }   
  32          
  33          //写入DS1302数据
  34          //address 写入的地址
  35          //dat     写入的数据
  36          void Write_Ds1302( u8 address,u8 dat )     
  37          {
  38   1        CE=0;
  39   1        _nop_();
  40   1        SCK=0;
  41   1        _nop_();
  42   1        CE=1;           //启动
  43   1          _nop_();                    
  44   1        Write_Ds1302_Byte(address); //发送地址
  45   1        Write_Ds1302_Byte(dat);   //发送数据
  46   1        CE=0;                 //恢复
  47   1      }
  48          
  49          //读出DS1302数据
  50          //address 读取数据的地址
  51          //返回 读取的数据值
C51 COMPILER V9.60.7.0   DS1302                                                            05/18/2023 17:05:14 PAGE 2   

  52          u8 Read_Ds1302 ( u8 address )
  53          {
  54   1        u8 i,temp=0x00;
  55   1        CE=0;
  56   1        _nop_();
  57   1        _nop_();
  58   1        SCK=0;
  59   1        _nop_();
  60   1        _nop_();
  61   1        CE=1;
  62   1        _nop_();
  63   1        _nop_();
  64   1      
  65   1        Write_Ds1302_Byte(address);
  66   1      
  67   1        for (i=0;i<8;i++)     //循环8次 读取数据
  68   1        {   
  69   2          if(SDA)
  70   2          temp|=0x80;     //每次传输低字节
  71   2          SCK=0;
  72   2          temp>>=1;     //右移一位
  73   2          _nop_();
  74   2           _nop_();
  75   2           _nop_();
  76   2          SCK=1;
  77   2        } 
  78   1      
  79   1        CE=0;
  80   1        _nop_();              //以下为DS1302复位的稳定时间
  81   1        _nop_();
  82   1        CE=0;
  83   1        SCK=0;
  84   1        _nop_();
  85   1        _nop_();
  86   1        _nop_();
  87   1        _nop_();
  88   1        SCK=1;
  89   1        _nop_();
  90   1        _nop_();
  91   1        SDA=0;
  92   1        _nop_();
  93   1        _nop_();
  94   1        SDA=1;
  95   1        _nop_();
  96   1        _nop_();
  97   1        return (temp);      //返回
  98   1      }
  99          
 100          
 101          //写入时 DCB转换  
 102          //DS1302 只接收 DCB码 即高4位放10位值 低4位放个位值
 103          //add 要转换的地址
 104          //返回 转换后的数据
 105          u8 bcd_read(u8 add)
 106          {
 107   1        u8 fla,fla2;
 108   1        fla=Read_Ds1302(add);
 109   1        fla2=((fla/16)*10)+(fla&0x0f);
 110   1        return fla2;  
 111   1      }
 112          
 113          
C51 COMPILER V9.60.7.0   DS1302                                                            05/18/2023 17:05:14 PAGE 3   

 114          
 115          /*
 116          
 117          //设定时钟数据
 118          //主要设置时钟芯片里的 秒分时日月周年
 119          void Set_RTC(void)           //设定 日历
 120          {
 121            u8 i;
 122          
 123            for(i=0;i<7;i++)         //BCD处理
 124             ds1302tmp[i]=ds1302tmp[i]/10*16+ds1302tmp[i]%10;  //ds1302tmp[7]={0,20,8,20,4,7,20};
 125             
 126            Write_Ds1302(0x8E,0X00);   //写使能
 127                
 128            for(i=0;i<7;i++)       //7次写入 秒分时日月周年
 129            Write_Ds1302(write_rtc_address[i],ds1302tmp[i]);
 130            
 131              Write_Ds1302(0x8E,0x80);   //写禁止
 132          
 133          }
 134          
 135          */
 136          
 137          
 138          
 139          
 140          //DS1302  时间 显示函数
 141          //此函数需要循环 进行更新 不能自动更新
 142          //例20:25
 143          void ds1302_scan(void)
 144          {
 145   1          u8 temp;  
 146   1        
 147   1        temp = bcd_read(0x85);//时
 148   1      
 149   1        LCD12864_SetWindow(3,0);    //第4行 显示      
 150   1        LCD12864_WriteData(temp/10%10+0x30);      
 151   1        LCD12864_WriteData(temp%10+0x30);
 152   1        LCD12864_WriteData(':');
 153   1        
 154   1        temp = bcd_read(0x83);//分
 155   1      
 156   1        LCD12864_WriteData(temp/10%10+0x30);      
 157   1        LCD12864_WriteData(temp%10+0x30); 
 158   1        
 159   1      }
 160          
 161          
 162          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
