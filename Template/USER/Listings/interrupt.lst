C51 COMPILER V9.54   INTERRUPT                                                             05/08/2023 09:30:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\Objects\interrupt.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE ..\HARDWARE\interrupt\interrupt.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HARDW
                    -ARE\ad;..\HARDWARE\ds1302;..\HARDWARE\interrupt;..\HARDWARE\key;..\HARDWARE\lcd12864;..\HARDWARE\timer) DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\interrupt.lst) TABS(2) OBJECT(.\Objects\interrupt.obj)

line level    source

   1          #include  "stc15f2k60s2.h"
   2          #include  "gui.h"
*** WARNING C318 IN LINE 2 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'gui.h'
   3          #include  "tft.h"
*** WARNING C318 IN LINE 3 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'tft.h'
   4          #include  "ov7670.h"
*** WARNING C318 IN LINE 4 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'ov7670.h'
   5          #include  "sys.h"
*** WARNING C318 IN LINE 5 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'sys.h'
   6          #include  "sccb.h"
*** WARNING C318 IN LINE 6 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'sccb.h'
   7          #include  "h1838.h"
*** WARNING C318 IN LINE 7 OF ..\HARDWARE\interrupt\interrupt.c: can't open file 'h1838.h'
   8          #include  "interrupt.h"
*** ERROR C129 IN LINE 7 OF ..\HARDWARE\interrupt\interrupt.h: missing ';' before 'sign_18_ov'
   9          
  10          
  11          u8 sign_18_ov=0;     //中断函数选择标志
  12          
  13          //中断函数
  14          //说明 h1838 和ov7670  都用到了P3.2口外部中断功能 
  15          void IR_IN() interrupt 0   
  16          {
  17          
  18           if(sign_18_ov==0)       //红外解码中断调用函数
  19           {
  20             u8 j,k;
  21             u16 N=0;
  22             u8 IRCOM[4];
  23             EX0 = 0;              //进入中断后关闭中断 进行解码
  24             delaylow(112);      //24M或27M下大约7ms延时  9ms低电平前 检测P32状态
  25             if (IRIN==1)        //如果非0 说明红外错误 返回
  26             { EX0 =1;
  27               return;
  28              } 
  29                                      //确认IR信号出现
  30             while(!IRIN);            //等IR变为高电平，跳过9ms的前导低电平信号。   
  31          
  32             for (j=0;j<4;j++)         //收集四组数据
  33             { 
  34              for (k=0;k<8;k++)        //每组数据有8位
  35              {
  36               while (IRIN);           //等 IR 变为低电平，如果是第一次采集跳过4.5ms高电平信号。
  37          
  38               while (!IRIN);          //等 IR 变为高电平
  39               
  40               while (IRIN)            //计算IR高电平时长  犹豫单片机的运行 存在着计算时间
  41               {              
  42                 delaylow(5);         //27M下大约300+us 
  43                 N++;           
  44                 if(N>=30)
  45                { EX0=1;         //开中断
  46                 return;}            //0.14ms计数过长自动离开。
C51 COMPILER V9.54   INTERRUPT                                                             05/08/2023 09:30:23 PAGE 2   

  47          
  48               }                       //高电平计数完毕                 
  49               IRCOM[j]=IRCOM[j] >> 1;      //数据最高位补“0”
  50               if (N>=6) 
  51               {IRCOM[j]=IRCOM[j] | 0x80;}  //数据最高位补“1”
  52               N=0;
  53              }
  54             } 
  55             if (IRCOM[2]!=~IRCOM[3]) //控制码 控制反码进行比对 如果错误跳出
  56             { EX0=1;return; }
  57          
  58             ma[1]=IRCOM[2] & 0x0F;      //取键码的低四位
  59             ma[0]=IRCOM[2] >> 4;        //右移4位 取高四位值
  60          
  61             if(ma[1]>9)
  62               ma[1]=ma[1]+0x37;        //A 从65开始 十六进制为0x41
  63             else
  64             ma[1]=ma[1]+0x30;
  65          
  66             if(ma[0]>9)
  67               ma[0]=ma[0]+0x37;
  68             else
  69             ma[0]=ma[0]+0x30;
  70             hong=1;                //打开标志位
  71             EX0 = 1;         //开中断
  72            }
  73          
  74           else if(sign_18_ov==1)    //摄像头中断调用函数
  75            {
  76             if(cur_status==0) //如果此时状态为0，则说明是一个图像的开始，开始向FIFO罐入数据
  77              {
  78               FIFO_WRST=0;  //写复位
  79               FIFO_WRST=1;
  80               FIFO_WEN=1;   //写FIFO使能
  81               cur_status=1;   //标记为1
  82              }
  83             else 
  84              if(cur_status==1) //说明此处为图像的结束，亦即下一图像的开始
  85               {
  86                 FIFO_WEN=0;    //写FIFO禁能
  87                 FIFO_WRST=0;   //写复位
  88                 FIFO_WRST=1;
  89                 cur_status=2;  //标记为2  此时说明可以读取FIFO中的缓存数据
  90               EX0 = 0;     //关闭中断
  91               }
  92            
  93            }
  94          
  95          }
  96          
  97          
  98          

C51 COMPILATION COMPLETE.  6 WARNING(S),  1 ERROR(S)
